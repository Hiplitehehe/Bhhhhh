--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v82=0;while true do if (v82==0) then v19=v0(v3(v30,1,1));return "";end end else local v83=0;local v84;while true do if (v83==0) then v84=v2(v0(v30,16));if v19 then local v113=v5(v84,v19);v19=nil;return v113;else return v84;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v85=0 -0 ;local v86;while true do if (v85==((350 -(87 + 263)) -0)) then v86=(v31/((3 -1)^(v32-((181 -(67 + 113)) -(0 + 0)))))%((4 -2)^(((v33-(620 -((1362 -807) + 64))) -(v32-(4 -3))) + ((686 + 246) -(857 + (294 -220))))) ;return v86-(v86%(569 -(367 + 201))) ;end end else local v87=0;local v88;while true do if (v87==(927 -(214 + 713))) then v88=(1 + 1)^(v32-((953 -(802 + 150)) + 0)) ;return (((v31%(v88 + v88))>=v88) and (1 -0)) or (0 -0) ;end end end end local function v21() local v34=0 -0 ;local v35;while true do if (v34==(0 -0)) then v35=v1(v16,v18,v18);v18=v18 + 1 + 0 + 0 ;v34=998 -(915 + 82) ;end if (v34==(2 -1)) then return v35;end end end local function v22() local v36=0 -0 ;local v37;local v38;while true do if ((1188 -(1069 + 118))==v36) then return (v38 * (580 -324)) + v37 ;end if ((0 -0)==v36) then v37,v38=v1(v16,v18,v18 + (3 -1) );v18=v18 + 1 + 1 ;v36=1;end end end local function v23() local v39=0 + 0 ;local v40;local v41;local v42;local v43;while true do if (v39==(792 -(368 + 423))) then return (v43 * (52725428 -35948212)) + (v42 * (65554 -(10 + 8))) + (v41 * (694 -(145 + 293))) + v40 ;end if (v39==(0 -0)) then v40,v41,v42,v43=v1(v16,v18,v18 + (445 -(416 + 26)) );v18=v18 + (1490 -(998 + 488)) ;v39=1 + 0 + 0 ;end end end local function v24() local v44=v23();local v45=v23();local v46=1;local v47=(v20(v45,1,1100 -(1020 + 60) ) * ((1425 -(181 + 449 + 793))^(108 -(1893 -(1703 + 114))))) + v44 ;local v48=v20(v45,793 -((902 -(376 + 325)) + 571) ,13 + 18 );local v49=((v20(v45,109 -(169 -92) )==((1762 -(9 + 5)) -(760 + 987))) and  -(1139 -(116 + 1022))) or (4 -3) ;if (v48==(1913 -(1789 + 124))) then if (v47==(0 + 0)) then return v49 * (0 + (376 -(85 + 291))) ;else local v97=0 -0 ;while true do if (((0 -0) -(1265 -(243 + 1022)))==v97) then v48=(2646 -1786) -(814 + 45) ;v46=(0 -0) + 0 ;break;end end end elseif (v48==(5043 -2996)) then return ((v47==(0 + 0)) and (v49 * ((4 -3)/(0 + 0)))) or (v49 * NaN) ;end return v8(v49,v48-(299 + 63 + 661) ) * (v46 + (v47/((887 -(261 + 624))^(92 -40)))) ;end local function v25(v50) local v51=(2654 -(1329 + 145)) -(1123 + 57) ;local v52;local v53;while true do if (v51==(1 + 0)) then v52=v3(v16,v18,(v18 + v50) -((1226 -(140 + 831)) -((2013 -(1409 + 441)) + 91)) );v18=v18 + v50 ;v51=1932 -(1869 + 61) ;end if (v51==(0 + (718 -(15 + 703)))) then v52=nil;if  not v50 then local v107=0;while true do if (v107==(0 -0)) then v50=v23();if (v50==0) then return "";end break;end end end v51=1 -(0 + 0) ;end if (v51==3) then return v6(v53);end if (v51==(1 + 1)) then v53={};for v98=1 -0 , #v52 do v53[v98]=v2(v1(v3(v52,v98,v98)));end v51=3 + (438 -(262 + 176)) ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v54=(function() return 0;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();local v59=(function() return;end)();local v60=(function() return;end)();local v61=(function() return;end)();while true do if (v54~=(0 -0)) then else local v92=(function() return 280 -(99 + 181) ;end)();local v93=(function() return;end)();while true do if (v92==(0 + 0)) then v93=(function() return 0;end)();while true do if ((607 -(454 + 152))~=v93) then else v57=(function() return {};end)();v54=(function() return 2 -1 ;end)();break;end if (v93==(0 -0)) then v55=(function() return function(v120,v121,v122) local v123=(function() return 320 -(53 + 267) ;end)();while true do if (v123~=(0 + 0)) then else local v168=(function() return 413 -(15 + 398) ;end)();while true do if (v168~=0) then else v120[v121-#"~" ]=(function() return v122();end)();return v120,v121,v122;end end end end end;end)();v56=(function() return {};end)();v93=(function() return 1289 -(993 + 295) ;end)();end end break;end end end if (v54~=(1 + 1)) then else local v94=(function() return 1171 -(418 + 753) ;end)();local v95=(function() return;end)();while true do if (v94==0) then v95=(function() return 0 + 0 ;end)();while true do if (1==v95) then v59[ #"19("]=(function() return v21();end)();v54=(function() return 2 + 1 ;end)();break;end if (v95==(0 + 0)) then v61=(function() return {};end)();for v116= #" ",v60 do local v117=(function() return 850 -(20 + 830) ;end)();local v118=(function() return;end)();local v119=(function() return;end)();while true do if (v117==(1 + 0)) then if (v118== #"~") then v119=(function() return v21()~=(0 + 0) ;end)();elseif (v118==2) then v119=(function() return v24();end)();elseif (v118== #"-19") then v119=(function() return v25();end)();end v61[v116]=(function() return v119;end)();break;end if (v117==0) then local v167=(function() return 0;end)();while true do if (1~=v167) then else v117=(function() return 530 -(406 + 123) ;end)();break;end if (v167~=(1769 -(1749 + 20))) then else v118=(function() return v21();end)();v119=(function() return nil;end)();v167=(function() return 1 + 0 ;end)();end end end end end v95=(function() return 1 -0 ;end)();end end break;end end end if ((1323 -(1249 + 73))==v54) then local v96=(function() return 0 + 0 ;end)();while true do if (v96==(1 + 0)) then v60=(function() return v23();end)();v54=(function() return 2;end)();break;end if (v96~=(0 -0)) then else v58=(function() return {};end)();v59=(function() return {v56,v57,nil,v58};end)();v96=(function() return 1;end)();end end end if (v54==(1148 -(466 + 679))) then for v100= #".",v23() do local v101=(function() return v21();end)();if (v20(v101, #"{", #"[")==0) then local v108=(function() return 0;end)();local v109=(function() return;end)();local v110=(function() return;end)();local v111=(function() return;end)();local v112=(function() return;end)();while true do if (v108==(2 -1)) then local v115=(function() return 0 -0 ;end)();while true do if (v115==(1552 -(1126 + 425))) then v108=(function() return 407 -(118 + 287) ;end)();break;end if (v115~=0) then else v111=(function() return nil;end)();v112=(function() return nil;end)();v115=(function() return 2 -1 ;end)();end end end if (v108==(1902 -(106 + 1794))) then while true do if (v109==2) then local v124=(function() return 0 + 0 ;end)();local v125=(function() return;end)();while true do if (v124==(0 + 0)) then v125=(function() return 1121 -(118 + 1003) ;end)();while true do if (v125~=1) then else v109=(function() return  #"-19";end)();break;end if (v125~=0) then else if (v20(v111, #"/", #"~")~= #"\\") then else v112[5 -3 ]=(function() return v61[v112[5 -3 ]];end)();end if (v20(v111,5 -3 ,2)== #":") then v112[ #"xnx"]=(function() return v61[v112[ #"xnx"]];end)();end v125=(function() return 115 -(4 + 110) ;end)();end end break;end end end if (v109==(584 -(57 + 527))) then local v126=(function() return 1427 -(41 + 1386) ;end)();local v127=(function() return;end)();while true do if ((103 -(17 + 86))~=v126) then else v127=(function() return 0 + 0 ;end)();while true do if (v127~=(0 -0)) then else v110=(function() return v20(v101,5 -3 , #"gha");end)();v111=(function() return v20(v101, #"http",172 -(122 + 44) );end)();v127=(function() return 1;end)();end if (v127~=(1 + 0)) then else v109=(function() return  #"<";end)();break;end end break;end end end if (v109~= #"!") then else local v128=(function() return 0 + 0 ;end)();local v129=(function() return;end)();while true do if (v128~=(0 -0)) then else v129=(function() return 0;end)();while true do if ((0 -0)~=v129) then else v112=(function() return {v22(),v22(),nil,nil};end)();if (v110==(0 + 0)) then local v945=(function() return 0;end)();local v946=(function() return;end)();while true do if (v945~=0) then else v946=(function() return 0;end)();while true do if (v946==(0 + 0)) then v112[ #"19("]=(function() return v22();end)();v112[ #"asd1"]=(function() return v22();end)();break;end end break;end end elseif (v110== #",") then v112[ #"91("]=(function() return v23();end)();elseif (v110==2) then v112[ #"91("]=(function() return v23() -(2^(3 + 13)) ;end)();elseif (v110== #"19(") then local v954=(function() return 0;end)();local v955=(function() return;end)();while true do if (v954==0) then v955=(function() return 0 -0 ;end)();while true do if (v955~=(0 -0)) then else v112[ #"19("]=(function() return v23() -((67 -(30 + 35))^(35 -19)) ;end)();v112[ #"asd1"]=(function() return v22();end)();break;end end break;end end end v129=(function() return 1;end)();end if (v129~=1) then else v109=(function() return 1 + 1 ;end)();break;end end break;end end end if (v109~= #"xnx") then else if (v20(v111, #"gha", #"gha")== #"~") then v112[ #"0836"]=(function() return v61[v112[ #"0836"]];end)();end v56[v100]=(function() return v112;end)();break;end end break;end if (v108==(0 + 0)) then v109=(function() return 753 -(239 + 514) ;end)();v110=(function() return nil;end)();v108=(function() return 1258 -(1043 + 214) ;end)();end end end end for v102= #",",v23() do v57,v102,v28=(function() return v55(v57,v102,v28);end)();end return v59;end end end local function v29(v62,v63,v64) local v65=v62[1];local v66=v62[1331 -(797 + 532) ];local v67=v62[3 + 0 ];return function(...) local v68=v65;local v69=v66;local v70=v67;local v71=v27;local v72=1 + 0 ;local v73= -1;local v74={};local v75={...};local v76=v12("#",...) -1 ;local v77={};local v78={};for v89=0,v76 do if (v89>=v70) then v74[v89-v70 ]=v75[v89 + (1203 -(373 + 829)) ];else v78[v89]=v75[v89 + (732 -(476 + 255)) ];end end local v79=(v76-v70) + (1131 -(369 + 761)) ;local v80;local v81;while true do v80=v68[v72];v81=v80[1 + 0 ];if (v81<=((113 -63) -22)) then if (v81<=((20 + 4) -(4 + 7))) then if (v81<=(244 -(64 + 174))) then if (v81<=((1 -0) + 1)) then if ((2128>836) and (v81<=0)) then local v131;local v132;v132=v80[2 -0 ];v131=v78[v80[339 -(144 + 192) ]];v78[v132 + (217 -(42 + 174)) ]=v131;v78[v132]=v131[v80[4 + 0 + 0 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[2 + 1 ];v72=v72 + (1505 -(363 + 1141)) ;v80=v68[v72];v132=v80[1582 -(1183 + 397) ];v78[v132]=v78[v132](v13(v78,v132 + (2 -(1 -0)) ,v80[3 + 0 ]));v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v78[v80[1978 -(1913 + 62) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[5 -3 ]]=v64[v80[3]];v72=v72 + (1934 -(565 + 1368)) ;v80=v68[v72];v132=v80[7 -5 ];v131=v78[v80[1664 -(1477 + 184) ]];v78[v132 + (1 -0) ]=v131;v78[v132]=v131[v80[2 + 2 + 0 + 0 ]];v72=v72 + ((2608 -(1414 + 337)) -(564 + 292)) ;v80=v68[v72];v78[v80[2 -0 ]]=v80[8 -5 ];v72=v72 + 1 ;v80=v68[v72];v132=v80[306 -(244 + (2000 -(1642 + 298))) ];v78[v132]=v78[v132](v13(v78,v132 + 1 ,v80[3 + 0 ]));v72=v72 + 1 ;v80=v68[v72];v78[v80[478 -(41 + 435) ]]=v78[v80[7 -4 ]][v80[(2891 -1886) -(938 + 63) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v80[3 + 0 ];v72=v72 + 1 ;v80=v68[v72];v72=v80[3];elseif (v81>(1126 -(936 + 189))) then local v170;local v171;v171=v80[1 + 1 ];v170=v78[v80[8 -5 ]];v78[v171 + (1614 -(1565 + 16 + 32)) ]=v170;v78[v171]=v170[v80[4]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1140 -(782 + 356) ]]={};v72=v72 + (268 -(176 + 91)) ;v80=v68[v72];v78[v80[(4 + 0) -2 ]][v80[4 -1 ]]=v80[1096 -(975 + 117) ];v72=v72 + (1876 -((1129 -(357 + 615)) + 1718)) ;v80=v68[v72];v78[v80[2 + 0 ]][v80[10 -7 ]]=v80[3 + 1 ];v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[1020 -(697 + 321) ]][v80[7 -4 ]]=v80[8 -4 ];v72=v72 + (2 -(2 -1)) ;v80=v68[v72];v171=v80[1 + 1 ];v78[v171](v13(v78,v171 + (1 -0) ,v80[7 -4 ]));else local v185;local v186,v187;local v188;local v189;v78[v80[1229 -(322 + 776 + 129) ]][v80[614 -(602 + 9) ]]=v78[v80[1193 -(449 + 740) ]];v72=v72 + (873 -(826 + 46)) ;v80=v68[v72];v78[v80[2]][v80[950 -(245 + 702) ]]=v80[12 -8 ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v78[v80[1901 -(260 + 1638) ]];v72=v72 + (441 -(382 + 58)) ;v80=v68[v72];v78[v80[6 -(8 -4) ]]=v64[v80[3 + 0 ]];v72=v72 + (1 -0) ;v80=v68[v72];v189=v80[5 -3 ];v188=v78[v80[1208 -(902 + 303) ]];v78[v189 + ((1 + 0) -0) ]=v188;v78[v189]=v188[v80[9 -5 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v80[1693 -(1121 + 569) ];v72=v72 + (215 -(22 + 192)) ;v80=v68[v72];v189=v80[685 -(483 + 200) ];v78[v189]=v78[v189](v13(v78,v189 + 1 ,v80[3]));v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v78[v80[3]][v80[(100 + 1367) -(1404 + 59) ]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2]]=v78[v80[3 -0 ]][v80[769 -(468 + 297) ]];v72=v72 + (563 -(210 + 124 + 228)) ;v80=v68[v72];v189=v80[6 -4 ];v188=v78[v80[6 -3 ]];v78[v189 + (1 -0) ]=v188;v78[v189]=v188[v80[4]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1303 -(384 + 917) ]]=v64[v80[3]];v72=v72 + (237 -(141 + 95)) ;v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[3]];v72=v72 + 1 ;v80=v68[v72];v189=v80[4 -2 ];v186,v187=v71(v78[v189](v78[v189 + (2 -(698 -(128 + 569))) ]));v73=(v187 + v189) -1 ;v185=0;for v613=v189,v73 do v185=v185 + 1 + 0 ;v78[v613]=v186[v185];end v72=v72 + (2 -1) ;v80=v68[v72];v189=v80[2 + 0 ];v78[v189](v13(v78,v189 + 1 ,v73));v72=v72 + 1 + (1543 -(1407 + 136)) ;v80=v68[v72];v72=v80[3];end elseif (v81<=(5 -(1888 -(687 + 1200)))) then if ((v81==(2 + (1711 -(556 + 1154)))) or (2361<=1063)) then local v219;local v220;v220=v80[2];v219=v78[v80[166 -(92 + 71) ]];v78[v220 + (3 -2) + 0 ]=v219;v78[v220]=v219[v80[6 -2 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[(862 -(9 + 86)) -(574 + 191) ]]={};v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[4 -2 ]][v80[(423 -(275 + 146)) + 1 ]]=v80[4];v72=v72 + 1 ;v80=v68[v72];v78[v80[851 -(254 + 595) ]][v80[129 -(55 + 71) ]]=v80[5 -1 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[1792 -(573 + 1217) ]][v80[8 -5 ]]=v80[4];v72=v72 + 1 + 0 ;v80=v68[v72];v220=v80[2 -0 ];v78[v220](v13(v78,v220 + (940 -(714 + 225)) ,v80[8 -5 ]));else local v234=v80[1 + 1 ];v78[v234](v13(v78,v234 + ((65 -(29 + 35)) -(0 -0)) ,v73));end elseif ((v81>((2 -1) + 4)) or (1790>=3221)) then v78[v80[2]]=v63[v80[3 -0 ]];else local v237;local v238;v238=v80[2];v237=v78[v80[809 -(118 + 688) ]];v78[v238 + 1 ]=v237;v78[v238]=v237[v80[52 -(25 + 23) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v78[v80[1889 -(927 + 959) ]][v80[13 -9 ]];v72=v72 + (733 -(16 + 716)) ;v80=v68[v72];v238=v80[2];v78[v238](v13(v78,v238 + ((4 -3) -0) ,v80[100 -(11 + 86) ]));v72=v72 + (2 -1) ;v80=v68[v72];v238=v80[287 -(175 + 110) ];v237=v78[v80[6 -3 ]];v78[v238 + (4 -3) ]=v237;v78[v238]=v237[v80[1800 -(503 + 1293) ]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[1064 -(810 + 164 + 87) ];v72=v72 + 1 + 0 ;v80=v68[v72];v238=v80[2];v78[v238](v13(v78,v238 + 1 + 0 ,v80[3 + 0 ]));end elseif ((4459>=3851) and (v81<=9)) then if ((v81<=(540 -(43 + 490))) or (2969<=1860)) then local v157=733 -(711 + 22) ;local v158;local v159;while true do if (v157==((1023 -(53 + 959)) -8)) then v72=v72 + (860 -(240 + 619)) ;v80=v68[v72];v78[v80[1 + 1 ]][v80[4 -(409 -(312 + 96)) ]]=v80[1 + 3 ];v157=1748 -((2332 -988) + 400) ;end if (v157==(407 -(255 + 150))) then v72=v72 + (286 -(147 + 138)) + 0 ;v80=v68[v72];v78[v80[2 + 0 ]]={};v157=12 -9 ;end if ((((918 -(813 + 86)) -13)==v157) or (2123==39)) then v72=v72 + (1740 -(404 + 1335)) ;v80=v68[v72];v159=v80[408 -(183 + 223) ];v157=8 -1 ;end if (v157==(3 + 1 + 0)) then v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + 1 ]][v80[3]]=v80[4];v157=342 -(10 + 327) ;end if ((v157==(5 + (3 -1))) or (2132<=201)) then v78[v159](v13(v78,v159 + (339 -((610 -(18 + 474)) + 220)) ,v80[2 + 1 ]));break;end if (v157==(0 + (0 -0))) then v158=nil;v159=nil;v159=v80[451 -(108 + 341) ];v157=1 + 0 ;end if ((v157==1) or (4338>=4477)) then v158=v78[v80[3]];v78[v159 + ((1090 -(860 + 226)) -3) ]=v158;v78[v159]=v158[v80[1497 -(711 + 782) ]];v157=2;end if ((9 -4)==v157) then v72=v72 + (470 -(270 + 199)) ;v80=v68[v72];v78[v80[1 + 1 ]][v80[3]]=v80[4];v157=309 -(121 + 182) ;end end elseif (v81==(1827 -(580 + 1239))) then local v253=v80[5 -3 ];local v254={};for v634=1 + 0 , #v77 do local v635=v77[v634];for v709=0, #v635 do local v710=0 + 0 + 0 ;local v711;local v712;local v713;while true do if (v710==0) then v711=v635[v709];v712=v711[1 + 0 ];v710=1;end if ((v710==(2 -1)) or (1732>=3545)) then v713=v711[2 + 0 ];if ((1125>=64) and (v712==v78) and (v713>=v253)) then v254[v713]=v712[v713];v711[1168 -(645 + 522) ]=v254;end break;end end end end else v72=v80[3];end elseif (v81<=((3041 -(988 + 252)) -(115 + 895 + 780))) then if (v81>(10 + 0)) then local v256;local v257;v78[v80[(3 + 6) -7 ]][v80[3]]=v78[v80[11 -7 ]];v72=v72 + (1837 -(1045 + 791)) ;v80=v68[v72];v257=v80[4 -2 ];v78[v257](v13(v78,v257 + ((1971 -(49 + 1921)) -0) ,v80[3]));v72=v72 + (506 -(351 + (1044 -(223 + 667)))) ;v80=v68[v72];v78[v80[1576 -(1281 + 293) ]]=v78[v80[269 -(28 + 238) ]][v80[4]];v72=v72 + (2 -1) ;v80=v68[v72];v257=v80[1561 -(1381 + 178) ];v256=v78[v80[3 + 0 ]];v78[v257 + (53 -(51 + 1)) ]=v256;v78[v257]=v256[v80[4 + (0 -0) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[6 -4 ]]={};v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[472 -(381 + 89) ]][v80[3 + 0 ]]=v80[3 + 1 ];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2]][v80[1159 -((2299 -1225) + 82) ]]=v80[8 -4 ];else local v274=v80[1786 -(214 + 1570) ];local v275=v78[v274];local v276=v80[(2583 -(146 + 979)) -(990 + 465) ];for v636=1 + 0 ,v276 do v275[v636]=v78[v274 + v636 ];end end elseif (v81>12) then local v277;local v278;v78[v80[1 + 1 ]][v80[1 + 2 + 0 ]]=v78[v80[4]];v72=v72 + (3 -2) ;v80=v68[v72];v278=v80[(2333 -(311 + 294)) -(1668 + 58) ];v78[v278](v13(v78,v278 + (627 -(512 + 114)) ,v80[7 -4 ]));v72=v72 + (1 -0) ;v80=v68[v72];v278=v80[(16 -10) -4 ];v277=v78[v80[2 + 1 ]];v78[v278 + 1 + 0 ]=v277;v78[v278]=v277[v80[2 + 2 + (1443 -(496 + 947)) ]];v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[1996 -((1467 -(1233 + 125)) + 1885) ]]=v78[v80[1472 -(1269 + 200) ]];v72=v72 + ((1 + 0) -0) ;v80=v68[v72];v278=v80[(733 + 84) -(98 + 717) ];v78[v278](v13(v78,v278 + (827 -(802 + 24)) ,v80[5 -2 ]));v72=v72 + 1 ;v80=v68[v72];v278=v80[2 -0 ];v277=v78[v80[1 + 2 ]];v78[v278 + 1 + 0 ]=v277;v78[v278]=v277[v80[4 + 0 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v78[v80[1 + 2 ]];v72=v72 + (2 -1) ;v80=v68[v72];v278=v80[1647 -(963 + 682) ];v78[v278](v13(v78,v278 + 1 ,v80[9 -6 ]));v72=v72 + 1 + 0 ;v80=v68[v72];v278=v80[1 + 0 + 1 ];v277=v78[v80[3 + 0 ]];v78[v278 + (1505 -(504 + 1000)) + 0 + 0 ]=v277;v78[v278]=v277[v80[4]];v72=v72 + 1 + 0 ;v80=v68[v72];v278=v80[2];v78[v278](v78[v278 + (1434 -(726 + 71 + 636)) ]);else v63[v80[14 -11 ]]=v78[v80[1621 -(135 + 1292 + 192) ]];end elseif ((v81<=((9 -2) + 13)) or (3215>4005)) then if (v81<=(37 -21)) then if (v81<=(13 + 1)) then local v160=0;local v161;local v162;while true do if (v160==(2 + 1)) then v78[v80[328 -(192 + 134) ]]=v80[1279 -(316 + 960) ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]]={};v72=v72 + 1 + 0 + 0 ;v80=v68[v72];v160=4;end if ((2415>665) and ((7 -5)==v160)) then v162=v80[2 + 0 ];v161=v78[v80[3]];v78[v162 + (552 -(83 + (650 -(156 + 26)))) ]=v161;v78[v162]=v161[v80[4]];v72=v72 + (1807 -(1202 + 604)) ;v80=v68[v72];v160=13 -10 ;end if (v160==(1 -0)) then v78[v162](v13(v78,v162 + 1 ,v80[8 -5 ]));v72=v72 + (326 -(45 + 280)) ;v80=v68[v72];v78[v80[2 + 0 + 0 ]]=v78[v80[(3 -0) + 0 ]][v80[168 -(149 + 15) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v160=2;end if ((v160==(3 + 2)) or (1089>2205)) then v78[v80[1 + (961 -(890 + 70)) ]][v80[(122 -(39 + 78)) -2 ]]=v80[1915 -(340 + 1571) ];break;end if ((v160==0) or (2146<=628)) then v161=nil;v162=nil;v78[v80[1 + 1 ]][v80[(2257 -(14 + 468)) -(1733 + (85 -46)) ]]=v78[v80[10 -6 ]];v72=v72 + ((2892 -1857) -(65 + 60 + 909)) ;v80=v68[v72];v162=v80[1950 -(659 + 437 + 852) ];v160=1 + 0 ;end if (4==v160) then v78[v80[2 -0 ]][v80[3 + 0 ]]=v80[516 -(409 + 103) ];v72=v72 + (237 -(46 + 190)) ;v80=v68[v72];v78[v80[97 -(51 + 44) ]][v80[1 + 2 ]]=v80[4];v72=v72 + (1318 -(1114 + 203)) ;v80=v68[v72];v160=731 -(228 + 106 + 392) ;end end elseif (v81==(4 + 11)) then local v303=0 + 0 + 0 ;local v304;local v305;local v306;local v307;while true do if ((v303==2) or (3415>=4449)) then for v925=v304,v73 do v307=v307 + (664 -(174 + 489)) ;v78[v925]=v305[v307];end break;end if (v303==(2 -1)) then v73=(v306 + v304) -((500 + 1406) -(830 + 1075)) ;v307=0;v303=526 -(303 + 221) ;end if (v303==(1269 -((442 -211) + 1038))) then v304=v80[2 + 0 ];v305,v306=v71(v78[v304](v13(v78,v304 + (1163 -(171 + 991)) ,v80[12 -9 ])));v303=2 -1 ;end end else local v308=0;local v309;local v310;while true do if (v308==(14 -8)) then v78[v80[2 + 0 ]][v80[10 -7 ]]=v80[11 -7 ];break;end if (v308==(2 -0)) then v80=v68[v72];v78[v80[2]]=v78[v80[3]][v80[12 -8 ]];v72=v72 + (1249 -(111 + 1137)) ;v80=v68[v72];v308=161 -(91 + 67) ;end if (v308==(0 -0)) then v309=nil;v310=nil;v78[v80[2]][v80[1 + 2 ]]=v78[v80[527 -(423 + 100) ]];v72=v72 + 1 + 0 ;v308=2 -1 ;end if ((v308==(3 + 1)) or (1765>4310)) then v72=v72 + (772 -(326 + 445)) ;v80=v68[v72];v78[v80[8 -6 ]]={};v72=v72 + (2 -1) ;v308=11 -6 ;end if ((906>200) and (v308==(716 -(530 + 181)))) then v80=v68[v72];v78[v80[883 -(614 + 267) ]][v80[3]]=v80[36 -(19 + 13) ];v72=v72 + (1 -0) ;v80=v68[v72];v308=13 -7 ;end if ((v308==(2 -1)) or (3072<=2133)) then v80=v68[v72];v310=v80[1 + 1 ];v78[v310](v13(v78,v310 + (1 -0) ,v80[3]));v72=v72 + (1 -0) ;v308=1814 -(1293 + 519) ;end if (v308==(5 -2)) then v310=v80[4 -2 ];v309=v78[v80[5 -2 ]];v78[v310 + (4 -3) ]=v309;v78[v310]=v309[v80[9 -(5 + 0) ]];v308=3 + (3 -2) ;end end end elseif ((904<=1400) and (v81<=(4 + 14))) then if ((v81>(39 -(1 + 21))) or (718>3863)) then local v311=0 + 0 ;local v312;while true do if ((v311==4) or (2483==2223)) then v80=v68[v72];v78[v80[2]]=v80[1 + 2 ];v72=v72 + (52 -(12 + 39)) ;v80=v68[v72];v311=5;end if (v311==(1 + 0)) then v78[v80[2]]=v78[v80[1099 -(709 + 387) ]][v80[1862 -(673 + 1185) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[5 -3 ]]=v78[v80[3]];v311=2;end if ((1405>=829) and (v311==(19 -13))) then v72=v80[4 -(1 + 0) ];break;end if (v311==((0 -0) + 0)) then v312=nil;v78[v80[2 + 0 ]]=v64[v80[3 -0 ]];v72=v72 + (3 -2) + 0 ;v80=v68[v72];v311=1;end if (v311==(5 -2)) then v72=v72 + 1 ;v80=v68[v72];v78[v80[3 -(1 + 0) ]]=v64[v80[3]];v72=v72 + ((991 + 890) -(446 + (3635 -2201))) ;v311=1287 -(1040 + 243) ;end if ((3341<3863) and (v311==(14 -9))) then v312=v80[1849 -(559 + 1288) ];v78[v312](v78[v312 + 1 ]);v72=v72 + ((1287 + 645) -(609 + 1322)) ;v80=v68[v72];v311=460 -(13 + 441) ;end if (v311==(7 -5)) then v72=v72 + (2 -1) ;v80=v68[v72];v312=v80[9 -7 ];v78[v312](v13(v78,v312 + 1 ,v80[1 + (9 -7) ]));v311=3;end end else local v313=0;local v314;local v315;local v316;local v317;local v318;while true do if (v313==(0 -0)) then v314=nil;v315,v316=nil;v317=nil;v318=nil;v78[v80[1 + 1 ]]=v64[v80[2 + 1 ]];v313=2 -1 ;end if (v313==(1 + 0)) then v72=v72 + (1 -(1710 -(1596 + 114))) ;v80=v68[v72];v318=v80[2 + 0 ];v317=v78[v80[2 + 1 ]];v78[v318 + 1 + 0 ]=v317;v313=2 + (0 -0) ;end if (v313==((716 -(164 + 549)) + 0)) then v80=v68[v72];v318=v80[435 -(153 + 280) ];v315,v316=v71(v78[v318](v13(v78,v318 + (2 -1) ,v80[3 + 0 ])));v73=(v316 + v318) -(1 + (1438 -(1059 + 379))) ;v314=0 + 0 ;v313=4 + 0 ;end if (v313==(3 + 1)) then for v928=v318,v73 do v314=v314 + (1 -0) ;v78[v928]=v315[v314];end v72=v72 + 1 ;v80=v68[v72];v318=v80[2 + 0 ];v78[v318]=v78[v318](v13(v78,v318 + (668 -(89 + 578)) ,v73));v313=6 -1 ;end if (v313==(2 + 0)) then v78[v318]=v317[v80[8 -4 ]];v72=v72 + (1050 -(572 + 477)) ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[2 + 1 ];v72=v72 + 1 ;v313=1 + 2 + 0 ;end if (v313==(93 -(84 + 2))) then v80=v68[v72];v318=v80[2 -0 ];v78[v318](v78[v318 + 1 + 0 ]);v72=v72 + (843 -(497 + 345)) ;v80=v68[v72];v313=1 + 7 ;end if (v313==(1 + 4)) then v72=v72 + 1 ;v80=v68[v72];v78[v80[1335 -(605 + 728) ]]();v72=v72 + 1 + 0 ;v80=v68[v72];v313=13 -7 ;end if (v313==(1 + 0 + (397 -(145 + 247)))) then v78[v80[7 -5 ]]=v64[v80[3 + 0 ]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2]]=v80[3 + 0 ];v72=v72 + (490 -(457 + 32)) ;v313=3 + 4 ;end if (v313==(1410 -(832 + 570))) then v72=v80[3 + 0 ];break;end end end elseif (v81==(5 + 14)) then local v319;local v320;v78[v80[6 -4 ]][v80[3 + 0 ]]=v78[v80[2 + 1 + 1 ]];v72=v72 + (797 -((1743 -1155) + 208)) ;v80=v68[v72];v320=v80[5 -3 ];v78[v320](v13(v78,v320 + ((346 + 1455) -(884 + 790 + 126)) ,v80[6 -3 ]));v72=v72 + (1 -0) + 0 ;v80=v68[v72];v78[v80[655 -(232 + 421) ]]=v78[v80[1892 -(1569 + 320) ]][v80[1 + 3 ]];v72=v72 + (721 -(254 + 466)) + 0 ;v80=v68[v72];v320=v80[6 -4 ];v319=v78[v80[608 -(316 + 289) ]];v78[v320 + 1 ]=v319;v78[v320]=v319[v80[10 -6 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[(2015 -(544 + 16)) -(666 + (2500 -1713)) ]]=v80[428 -(360 + (693 -(294 + 334))) ];v72=v72 + 1 ;v80=v68[v72];v78[v80[2 + (253 -(236 + 17)) ]]={};v72=v72 + 1 ;v80=v68[v72];v78[v80[256 -(79 + 175) ]][v80[4 -1 ]]=v80[4 + 0 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]][v80[8 -5 ]]=v80[7 -3 ];v72=v72 + (900 -(503 + 396)) ;v80=v68[v72];v78[v80[183 -(92 + 89) ]][v80[3]]=v80[4];else local v341=0 -0 ;local v342;local v343;while true do if (v341==(4 + 2)) then v72=v72 + 1 + 0 ;v80=v68[v72];v343=v80[(4 + 3) -5 ];v341=7;end if (v341==(1 + 1)) then v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]={};v341=6 -3 ;end if (7==v341) then v78[v343](v13(v78,v343 + 1 + 0 ,v80[2 + 1 ]));break;end if ((3840>1000) and (v341==(2 -1))) then v342=v78[v80[1 + 0 + 2 ]];v78[v343 + (1 -0) ]=v342;v78[v343]=v342[v80[1248 -(485 + 759) ]];v341=(14 -10) -2 ;end if ((v341==(1193 -(442 + 747))) or (2660<1908)) then v72=v72 + (1136 -((3939 -3107) + 303)) ;v80=v68[v72];v78[v80[948 -(88 + 858) ]][v80[1 + 2 ]]=v80[4];v341=5 + 0 ;end if (v341==(1 + 2)) then v72=v72 + (790 -(766 + 23)) ;v80=v68[v72];v78[v80[9 -7 ]][v80[3]]=v80[3 + 1 ];v341=5 -1 ;end if (v341==5) then v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2]][v80[10 -7 ]]=v80[4];v341=1079 -(1036 + 37) ;end if (v341==0) then v342=nil;v343=nil;v343=v80[2 + 0 ];v341=1;end end end elseif (v81<=(46 -22)) then if ((v81<=(15 + 3 + 4)) or (2288>2511)) then if (v81==(1501 -(641 + 839))) then v78[v80[915 -(910 + 3) ]][v80[7 -4 ]]=v80[1688 -(1466 + 218) ];else v78[v80[(795 -(413 + 381)) + 1 ]]=v78[v80[1151 -(556 + 592) ]];end elseif (v81==(1 + 22)) then local v348;local v349,v350;local v351;local v352;v78[v80[2]][v80[(3 -1) + 1 ]]=v78[v80[4]];v72=v72 + (809 -(329 + 479)) ;v80=v68[v72];v78[v80[856 -(174 + 680) ]][v80[10 -7 ]]=v80[8 -4 ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[741 -(396 + 343) ]]=v78[v80[1 + 2 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[1479 -(29 + 1448) ]]=v64[v80[1392 -(135 + (3256 -2002)) ]];v72=v72 + 1 ;v80=v68[v72];v352=v80[(1977 -(582 + 1388)) -5 ];v351=v78[v80[13 -10 ]];v78[v352 + 1 + 0 ]=v351;v78[v352]=v351[v80[1531 -(389 + 1138) ]];v72=v72 + (575 -(102 + 472)) ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[3];v72=v72 + 1 + (0 -0) ;v80=v68[v72];v352=v80[2 + 0 + 0 ];v78[v352]=v78[v352](v13(v78,v352 + (1546 -(320 + 1225)) ,v80[5 -(366 -(326 + 38)) ]));v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v78[v80[3]][v80[1468 -(157 + 1307) ]];v72=v72 + (1860 -(821 + 1038)) ;v80=v68[v72];v78[v80[4 -2 ]]=v78[v80[1 + 2 ]][v80[6 -2 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v352=v80[4 -2 ];v351=v78[v80[1029 -(834 + 192) ]];v78[v352 + 1 + 0 ]=v351;v78[v352]=v351[v80[2 + 2 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 -0 ]]=v64[v80[307 -(300 + 4) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[5 -3 ]]=v78[v80[(1079 -714) -((159 -47) + 250) ]];v72=v72 + (621 -(47 + 573)) + 0 + 0 ;v80=v68[v72];v352=v80[4 -2 ];v349,v350=v71(v78[v352](v78[v352 + 1 + 0 ]));v73=(v350 + v352) -(4 -3) ;v348=(0 -0) + 0 ;for v663=v352,v73 do local v664=0 + 0 ;while true do if (v664==(0 + 0)) then v348=v348 + (1665 -(1269 + 395)) + 0 ;v78[v663]=v349[v348];break;end end end v72=v72 + ((1907 -(76 + 416)) -((1444 -(319 + 124)) + 413)) ;v80=v68[v72];v352=v80[4 -2 ];v78[v352](v13(v78,v352 + (883 -(244 + 638)) ,v73));v72=v72 + (694 -(627 + 66)) ;v80=v68[v72];v72=v80[8 -5 ];else local v382;local v383;v383=v80[604 -(512 + (205 -115)) ];v382=v78[v80[1909 -(1665 + 241) ]];v78[v383 + (718 -(373 + 344)) ]=v382;v78[v383]=v382[v80[2 + (1009 -(564 + 443)) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]={};v72=v72 + 1 ;v80=v68[v72];v78[v80[(13 -8) -3 ]][v80[4 -1 ]]=v80[1103 -(35 + 1064) ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[4 -2 ]][v80[1 + 2 ]]=v80[1240 -(298 + 938) ];v72=v72 + ((1718 -(337 + 121)) -(233 + 1026)) ;v80=v68[v72];v78[v80[1668 -(636 + (3017 -1987)) ]]={};v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]={};v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[(3 -2) + 1 ]][v80[1 + 2 ]]=v80[225 -(55 + 166) ];end elseif (v81<=(6 + 20)) then if (v81>(3 + 22)) then local v398;v78[v80[7 -5 ]]=v64[v80[300 -(36 + 261) ]];v72=v72 + (1 -(1911 -(1261 + 650))) ;v80=v68[v72];v78[v80[1370 -(34 + 1334) ]]=v78[v80[2 + 1 ]][v80[4 + 0 ]];v72=v72 + (1284 -(1035 + 248)) ;v80=v68[v72];v78[v80[23 -(20 + 1) ]]=v78[v80[2 + 1 ]];v72=v72 + (320 -(134 + 185)) ;v80=v68[v72];v398=v80[1135 -(549 + 584) ];v78[v398](v13(v78,v398 + 1 ,v80[688 -(133 + 181 + 371) ]));v72=v72 + (3 -(2 -0)) ;v80=v68[v72];v78[v80[970 -(478 + 490) ]]=v64[v80[(1819 -(772 + 1045)) + 1 ]];v72=v72 + (1173 -(786 + 55 + 331)) ;v80=v68[v72];v78[v80[6 -4 ]]=v80[1382 -(1055 + 324) ];v72=v72 + (1341 -((1237 -(102 + 42)) + 247)) ;v80=v68[v72];v398=v80[2 + 0 ];v78[v398](v78[v398 + 1 + 0 ]);v72=v72 + 1 ;v80=v68[v72];v72=v80[11 -8 ];else local v413=0;local v414;while true do if ((v413==((1844 -(1524 + 320)) -0)) or (3592>=4409)) then v414=v80[5 -3 ];v78[v414]=v78[v414](v13(v78,v414 + (2 -1) ,v73));break;end end end elseif (v81>27) then local v415=v69[v80[(1272 -(1049 + 221)) + 1 ]];local v416;local v417={};v416=v10({},{__index=function(v665,v666) local v667=0 -0 ;local v668;while true do if (v667==(0 -0)) then v668=v417[v666];return v668[1 + 0 ][v668[4 -2 ]];end end end,__newindex=function(v669,v670,v671) local v672=688 -(364 + 324) ;local v673;while true do if (v672==0) then v673=v417[v670];v673[2 -1 ][v673[2]]=v671;break;end end end});for v674=2 -1 ,v80[2 + 2 ] do v72=v72 + (4 -3) ;local v675=v68[v72];if (v675[1]==22) then v417[v674-(1 -0) ]={v78,v675[3 + 0 ]};else v417[v674-((7 -4) -2) ]={v63,v675[232 -(73 + 156) ]};end v77[ #v77 + (349 -(136 + 212)) + (0 -0) ]=v417;end v78[v80[(652 + 161) -(721 + 90) ]]=v29(v415,v416,v64);else local v419=0 + 0 ;local v420;local v421;while true do if (v419==((9 + 0) -6)) then v78[v80[472 -(224 + 246) ]]=v64[v80[4 -1 ]];v72=v72 + (1 -0) ;v80=v68[v72];v421=v80[1 + (1605 -(240 + 1364)) ];v420=v78[v80[1 + 2 ]];v78[v421 + 1 + 0 ]=v420;v419=(1089 -(1050 + 32)) -3 ;end if ((v419==6) or (4841<2991)) then v80=v68[v72];v78[v80[6 -4 ]]=v80[3];break;end if ((v419==1) or (2863<=2540)) then v72=v72 + (514 -(203 + 310)) ;v80=v68[v72];v78[v80[1995 -(1238 + 755) ]]=v80[3];v72=v72 + 1 + 0 ;v80=v68[v72];v421=v80[(5484 -3948) -(709 + 825) ];v419=2;end if ((0 -0)==v419) then v420=nil;v421=nil;v421=v80[2 -0 ];v420=v78[v80[867 -(196 + 668) ]];v78[v421 + 1 ]=v420;v78[v421]=v420[v80[15 -11 ]];v419=1 -0 ;end if ((3057<=4822) and (v419==((496 + 342) -(171 + 662)))) then v421=v80[2];v78[v421]=v78[v421](v13(v78,v421 + 1 ,v80[3]));v72=v72 + (94 -(4 + 89)) ;v80=v68[v72];v78[v80[(1061 -(331 + 724)) -(1 + 3) ]]=v78[v80[2 + 1 ]][v80[17 -13 ]];v72=v72 + 1 + 0 ;v419=1492 -(35 + 1451) ;end if (4==v419) then v78[v421]=v420[v80[1457 -(28 + 1425) ]];v72=v72 + (1994 -((1585 -(269 + 375)) + 1052)) ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[3];v72=v72 + (1515 -(822 + 692)) ;v80=v68[v72];v419=6 -1 ;end if (v419==2) then v78[v421]=v78[v421](v13(v78,v421 + 1 + (725 -(267 + 458)) ,v80[300 -(45 + 252) ]));v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + 1 + 0 ]]=v78[v80[5 -2 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v419=7 -4 ;end end end elseif (v81<=(476 -(114 + 319))) then if (v81<=(49 -14)) then if (v81<=(39 -8)) then if (v81<=29) then do return;end elseif (v81>(20 + (828 -(667 + 151)))) then v78[v80[2]]=v78[v80[3]][v80[4]];else local v424=0;local v425;local v426;while true do if (v424==4) then v80=v68[v72];v78[v80[2 -0 ]]={};v72=v72 + (1 -(1497 -(1410 + 87))) ;v80=v68[v72];v424=5;end if (v424==((3860 -(1504 + 393)) -(556 + 1407))) then v425=nil;v426=nil;v426=v80[2];v425=v78[v80[1209 -(741 + 465) ]];v424=466 -(170 + 295) ;end if (v424==(3 + 2)) then v78[v80[2 + 0 ]]={};v72=v72 + (2 -(2 -1)) ;v80=v68[v72];v78[v80[(5 -3) + 0 ]][v80[2 + (797 -(461 + 335)) ]]=v80[3 + 1 ];break;end if (v424==3) then v72=v72 + (1231 -(957 + 35 + 238)) ;v80=v68[v72];v78[v80[2]][v80[1 + 2 ]]=v80[2 + (1763 -(1730 + 31)) ];v72=v72 + (3 -2) ;v424=10 -6 ;end if (v424==2) then v78[v80[2]]={};v72=v72 + 1 ;v80=v68[v72];v78[v80[5 -3 ]][v80[14 -11 ]]=v80[1784 -(389 + 1391) ];v424=2 + 1 ;end if (((1 + 0)==v424) or (4688<1489)) then v78[v426 + 1 ]=v425;v78[v426]=v425[v80[8 -4 ]];v72=v72 + (1668 -(728 + 939)) ;v80=v68[v72];v424=953 -(783 + 168) ;end end end elseif ((v81<=((389 -279) -77)) or (832>=4770)) then if (v81==(32 + 0)) then v78[v80[313 -((626 -317) + 2) ]]={};else local v428;local v429;local v430,v431;local v432;local v433;v78[v80[(11 -6) -3 ]]=v64[v80[(2283 -(138 + 930)) -(1090 + 122) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[6 -4 ]]=v64[v80[3 + 0 ]];v72=v72 + 1 ;v80=v68[v72];v433=v80[1120 -(628 + 490) ];v432=v78[v80[3]];v78[v433 + 1 ]=v432;v78[v433]=v432[v80[4]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[4 -2 ]]=v80[13 -10 ];v72=v72 + (775 -(431 + 343)) ;v80=v68[v72];v433=v80[(3 + 0) -1 ];v430,v431=v71(v78[v433](v13(v78,v433 + (2 -1) ,v80[3 + 0 ])));v73=(v431 + v433) -(1 + 0) ;v429=0 + 0 ;for v677=v433,v73 do local v678=1695 -(556 + 1139) ;while true do if ((15 -(6 + 9))==v678) then v429=v429 + 1 + 0 ;v78[v677]=v430[v429];break;end end end v72=v72 + 1 + 0 ;v80=v68[v72];v433=v80[171 -(28 + 141) ];v78[v433]=v78[v433](v13(v78,v433 + 1 ,v73));v72=v72 + 1 ;v80=v68[v72];v433=v80[1 + 1 ];v78[v433]=v78[v433]();v72=v72 + ((1 + 0) -0) ;v80=v68[v72];v78[v80[2]]=v64[v80[3 + 0 ]];v72=v72 + (1318 -(486 + 831)) ;v80=v68[v72];v78[v80[5 -3 ]]=v64[v80[10 -7 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v433=v80[6 -4 ];v432=v78[v80[1266 -(668 + 595) ]];v78[v433 + 1 + 0 ]=v432;v78[v433]=v432[v80[1 + 3 ]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[292 -(23 + 267) ]]=v80[3];v72=v72 + (1945 -(1129 + 815)) ;v80=v68[v72];v433=v80[2];v430,v431=v71(v78[v433](v13(v78,v433 + ((1584 -1196) -(371 + 16)) ,v80[1753 -(1326 + (2190 -(459 + 1307))) ])));v73=(v431 + v433) -(1 -0) ;v429=0;for v679=v433,v73 do v429=v429 + (3 -(1872 -(474 + 1396))) ;v78[v679]=v430[v429];end v72=v72 + (119 -(88 + 30)) ;v80=v68[v72];v433=v80[773 -(720 + 51) ];v78[v433]=v78[v433](v13(v78,v433 + ((2 -0) -1) ,v73));v72=v72 + 1 ;v80=v68[v72];v433=v80[1778 -(421 + 1355) ];v78[v433]=v78[v433]();v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v64[v80[(4 + 0) -1 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + 1 ]]=v64[v80[2 + 1 ]];v72=v72 + ((3104 -2020) -(286 + 797)) ;v80=v68[v72];v433=v80[2];v432=v78[v80[10 -7 ]];v78[v433 + (1 -0) ]=v432;v78[v433]=v432[v80[4]];v72=v72 + (440 -(397 + 42)) ;v80=v68[v72];v78[v80[1 + 0 + 1 ]]=v80[803 -(24 + 776) ];v72=v72 + (1 -0) ;v80=v68[v72];v433=v80[2];v430,v431=v71(v78[v433](v13(v78,v433 + (786 -(222 + 563)) ,v80[6 -3 ])));v73=(v431 + v433) -(1 + 0) ;v429=190 -(23 + 167) ;for v682=v433,v73 do v429=v429 + 1 ;v78[v682]=v430[v429];end v72=v72 + (1799 -(690 + 1108)) ;v80=v68[v72];v433=v80[1 + 1 ];v78[v433]=v78[v433](v13(v78,v433 + 1 + 0 ,v73));v72=v72 + 1 ;v80=v68[v72];v433=v80[850 -(40 + 808) ];v78[v433]=v78[v433]();v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[7 -5 ]]=v80[3];v72=v72 + 1 + (0 -0) ;v80=v68[v72];v78[v80[(8 -6) + 0 ]]=v80[594 -(562 + 29) ]~=(0 + 0 + 0) ;v72=v72 + ((1991 -(374 + 1045)) -(47 + 415 + 109)) ;v80=v68[v72];v433=v80[2 + 0 ];v432=v78[v80[8 -5 ]];v78[v433 + (1 -0) ]=v432;v78[v433]=v432[v80[8 -4 ]];v72=v72 + (1727 -(1165 + 561)) ;v80=v68[v72];v78[v80[1 + 1 ]]={};v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[2]]=v80[2 + 1 ];v72=v72 + (480 -(341 + (428 -290))) ;v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[5 -2 ]][v80[330 -(89 + (875 -(448 + 190))) ]];v72=v72 + (3 -2) ;v80=v68[v72];v432=v80[6 -3 ];v428=v78[v432];for v685=v432 + (882 -(581 + 300)) ,v80[4] do v428=v428   .. v78[v685] ;end v78[v80[2]]=v428;v72=v72 + (1221 -(855 + 365)) ;v80=v68[v72];v78[v80[4 -2 ]][v80[3]]=v78[v80[4]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1237 -(1030 + 205) ]][v80[1 + 2 + 0 ]]=v80[4];v72=v72 + 1 ;v80=v68[v72];v78[v80[2 + 0 ]][v80[3]]=v80[290 -(156 + 130) ];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2 -0 ]]=v64[v80[(3 + 2) -2 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[72 -(10 + 59) ]][v80[2 + 0 + 2 ]];v72=v72 + (4 -3) ;v80=v68[v72];v78[v80[2]]=v80[1166 -(671 + 492) ];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v80[(11 -8) + 0 ];v72=v72 + (1216 -(369 + 846)) ;v80=v68[v72];v433=v80[1 + 1 ];v78[v433]=v78[v433](v13(v78,v433 + 1 ,v80[3 + 0 ]));v72=v72 + (1946 -(1036 + 909)) ;v80=v68[v72];v78[v80[2]][v80[3 + (0 -0) ]]=v78[v80[6 -2 ]];v72=v72 + (204 -(11 + 192)) ;v80=v68[v72];v78[v80[2 + 0 ]][v80[3]]=v80[179 -(135 + 40) ];v72=v72 + 1 ;v80=v68[v72];v78[v80[(1498 -(1307 + 187)) -2 ]][v80[2 + 1 ]]=v80[(31 -23) -4 ];v72=v72 + ((2 -1) -0) ;v80=v68[v72];v78[v80[178 -(50 + 126) ]]=v64[v80[3]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[1416 -((3780 -2547) + 180) ]][v80[973 -(522 + 447) ]];v72=v72 + (1422 -(107 + 1314)) ;v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[8 -5 ]][v80[(685 -(232 + 451)) + 2 ]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[7 -5 ]][v80[3]]=v78[v80[1914 -(716 + 1194) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v433=v80[1 + 1 ];v78[v433]=v78[v433](v13(v78,v433 + 1 ,v80[3]));v72=v72 + ((482 + 22) -(74 + 429)) ;v80=v68[v72];v78[v80[3 -1 ]]={};v72=v72 + 1 + 0 ;v80=v68[v72];v433=v80[4 -2 ];v432=v78[v80[3 + 0 ]];v78[v433 + (2 -1) ]=v432;v78[v433]=v432[v80[9 -5 ]];v72=v72 + (434 -(279 + 154)) ;v80=v68[v72];v78[v80[780 -(454 + 324) ]]={};v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[19 -(12 + 5) ]][v80[2 + 1 ]]=v80[10 -6 ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1095 -(245 + 32 + 816) ]][v80[12 -9 ]]=v80[1187 -(1058 + 125) ];v72=v72 + (565 -(510 + 54)) ;v80=v68[v72];v433=v80[1 + 1 ];v78[v433]=v78[v433](v13(v78,v433 + (976 -(815 + 160)) ,v80[3]));v72=v72 + (4 -3) ;v80=v68[v72];v78[v80[4 -2 ]][v80[1 + 2 ]]=v78[v80[11 -7 ]];v72=v72 + (1899 -(41 + 1857)) ;v80=v68[v72];v433=v80[1895 -(1222 + 671) ];v432=v78[v80[7 -4 ]];v78[v433 + (1 -0) ]=v432;v78[v433]=v432[v80[1186 -(229 + 953) ]];v72=v72 + (1775 -(1111 + 663)) ;v80=v68[v72];v78[v80[1581 -(874 + 705) ]]={};v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]][v80[6 -3 ]]=v80[1 + 3 ];v72=v72 + (680 -((1293 -651) + 37)) ;v80=v68[v72];v78[v80[1 + 1 ]][v80[3]]=v80[1 + 3 ];v72=v72 + (2 -1) ;v80=v68[v72];v433=v80[456 -(233 + 221) ];v78[v433]=v78[v433](v13(v78,v433 + (2 -1) ,v80[3 + 0 ]));v72=v72 + (1542 -(718 + 823)) ;v80=v68[v72];v78[v80[2]][v80[2 + 1 ]]=v78[v80[809 -(266 + 539) ]];v72=v72 + (2 -1) ;v80=v68[v72];v433=v80[1227 -((672 -(13 + 23)) + 589) ];v432=v78[v80[3]];v78[v433 + (2 -1) ]=v432;v78[v433]=v432[v80[8 -4 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1 + 1 ]]={};v72=v72 + (1016 -(657 + 358)) ;v80=v68[v72];v78[v80[4 -2 ]][v80[6 -3 ]]=v80[7 -3 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]][v80[3]]=v80[1191 -(1151 + (50 -14)) ];v72=v72 + 1 + 0 ;v80=v68[v72];v433=v80[1 + 1 ];v78[v433]=v78[v433](v13(v78,v433 + (2 -1) ,v80[1835 -(1552 + 280) ]));v72=v72 + (835 -((116 -52) + 770)) ;v80=v68[v72];v78[v80[2]][v80[3 + 0 ]]=v78[v80[8 -4 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1245 -(157 + 1086) ]]=v78[v80[5 -2 ]][v80[17 -13 ]];v72=v72 + (1 -0) ;v80=v68[v72];v433=v80[2];v432=v78[v80[3]];v78[v433 + 1 ]=v432;v78[v433]=v432[v80[5 -1 ]];v72=v72 + (820 -(599 + 220)) ;v80=v68[v72];v78[v80[2]]=v80[5 -2 ];v72=v72 + (1932 -(1813 + (1206 -(830 + 258)))) ;v80=v68[v72];v78[v80[2 + 0 ]]={};v72=v72 + (1218 -(841 + 376)) ;v80=v68[v72];v78[v80[2]][v80[3]]=v80[5 -1 ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]][v80[3]]=v80[10 -6 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[861 -(464 + 395) ]][v80[7 -4 ]]=v80[2 + 2 ];end elseif ((1934==1934) and (v81==(871 -(467 + 370)))) then v78[v80[2]]=v64[v80[5 -2 ]];else local v539=0;local v540;local v541;while true do if (v539==1) then v78[v540 + 1 + 0 ]=v541;v78[v540]=v541[v80[13 -9 ]];break;end if ((v539==(0 + 0)) or (4524<=2618)) then v540=v80[2];v541=v78[v80[6 -3 ]];v539=521 -(150 + 370) ;end end end elseif ((v81<=((4659 -3338) -(74 + 1208))) or (4166>=4169)) then if (v81<=(90 -53)) then if ((v81>(170 -134)) or (3725<86)) then local v542=v80[2 + 0 ];local v543,v544=v71(v78[v542](v78[v542 + 1 ]));v73=(v544 + v542) -(391 -(14 + 376)) ;local v545=0 -0 ;for v686=v542,v73 do local v687=0;while true do if ((v687==(0 + 0 + 0)) or (4822<=153)) then v545=v545 + 1 + 0 + 0 ;v78[v686]=v543[v545];break;end end end else v78[v80[2 + 0 ]]=v29(v69[v80[3]],nil,v64);end elseif ((v81>(111 -73)) or (1816>2293)) then if v78[v80[(1443 -(860 + 581)) + 0 ]] then v72=v72 + ((291 -212) -(19 + 4 + 55)) ;else v72=v80[6 -3 ];end else local v547;local v548;v78[v80[2 + 0 ]]={};v72=v72 + 1 + (241 -(237 + 4)) ;v80=v68[v72];v548=v80[2 -0 ];v78[v548](v13(v78,v548 + 1 + 0 ,v80[904 -(652 + 249) ]));v72=v72 + (2 -1) ;v80=v68[v72];v548=v80[1870 -(708 + 1160) ];v547=v78[v80[(18 -10) -5 ]];v78[v548 + 1 ]=v547;v78[v548]=v547[v80[6 -2 ]];v72=v72 + (28 -(10 + 17)) ;v80=v68[v72];v78[v80[(2 -1) + 1 ]]=v80[1735 -(1400 + 332) ];v72=v72 + (1 -(0 -0)) ;v80=v68[v72];v548=v80[2];v78[v548](v13(v78,v548 + (1909 -(242 + 1666)) ,v80[2 + 1 ]));v72=v72 + 1 + 0 ;v80=v68[v72];v548=v80[2 + 0 ];v547=v78[v80[943 -(850 + 90) ]];v78[v548 + (1 -0) ]=v547;v78[v548]=v547[v80[1394 -(360 + 1030) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[5 -(3 + 0) ]]=v80[3 -0 ];v72=v72 + ((955 + 707) -(909 + 752)) ;v80=v68[v72];v548=v80[1225 -(109 + 1114) ];v78[v548](v13(v78,v548 + 1 ,v80[5 -2 ]));v72=v72 + 1 + 0 ;v80=v68[v72];v548=v80[2];v547=v78[v80[(924 -679) -(3 + 3 + 236) ]];v78[v548 + 1 + 0 ]=v547;v78[v548]=v547[v80[4 + 0 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[4 -(2 + 0) ]]=v78[v80[4 -(1427 -(85 + 1341)) ]][v80[1137 -(1076 + 57) ]];end elseif (v81<=(7 + 34)) then if (v81==(729 -(579 + 110))) then local v572=v80[1 + 1 ];v78[v572]=v78[v572](v13(v78,v572 + 1 ,v80[(4 -1) + 0 ]));else v78[v80[2 + 0 ]]=v80[410 -(174 + 233) ];end elseif (v81==((330 -213) -75)) then if (v80[3 -1 ]==v78[v80[2 + 2 ]]) then v72=v72 + (1175 -(663 + 511)) ;else v72=v80[3 + (372 -(45 + 327)) ];end else local v576=0 + 0 ;local v577;local v578;while true do if ((2 -1)==v576) then v72=v72 + (1 -0) + 0 ;v80=v68[v72];v578=v80[2];v577=v78[v80[(508 -(444 + 58)) -3 ]];v78[v578 + 1 ]=v577;v78[v578]=v577[v80[9 -5 ]];v576=1 + 0 + 1 ;end if ((3 -1)==v576) then v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1 + 0 + 1 ]]={};v72=v72 + 1 ;v80=v68[v72];v78[v80[724 -(478 + 244) ]][v80[520 -(440 + 77) ]]=v80[2 + 2 ];v576=2 + (2 -1) ;end if (v576==(18 -13)) then v72=v80[1559 -(655 + 901) ];break;end if (v576==(1 + 2)) then v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]][v80[11 -8 ]]=v80[1449 -(695 + 750) ];v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[2 -0 ]][v80[11 -(1740 -(64 + 1668)) ]]=v80[355 -(285 + 66) ];v576=8 -4 ;end if (v576==(1314 -((2655 -(1227 + 746)) + 628))) then v72=v72 + 1 + 0 ;v80=v68[v72];v578=v80[2];v78[v578](v13(v78,v578 + 1 ,v80[3]));v72=v72 + 1 ;v80=v68[v72];v576=5;end if (v576==(299 -(176 + 123))) then v577=nil;v578=nil;v63[v80[2 + (2 -1) ]]=v78[v80[2 + (0 -0) ]];v72=v72 + (270 -(239 + 30)) ;v80=v68[v72];v78[v80[1 + 1 ]]=v63[v80[3]];v576=1 + 0 ;end end end elseif (v81<=(88 -38)) then if (v81<=(143 -97)) then if ((v81<=(359 -(306 + 9))) or (2823>=3213)) then local v163=0 -0 ;local v164;local v165;while true do if (v163==(1 + 1)) then v78[v80[2 + 0 ]]={};v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + 1 ]][v80[8 -5 ]]=v80[1379 -(1140 + (729 -(415 + 79))) ];v163=2 + 1 ;end if (v163==(1 + 0 + 0)) then v78[v165 + (492 -(142 + 349)) + 0 ]=v164;v78[v165]=v164[v80[56 -(33 + 19) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v163=2;end if (4==v163) then v80=v68[v72];v78[v80[5 -3 ]][v80[2 + 1 ]]=v80[7 -3 ];v72=v72 + 1 + 0 + 0 ;v80=v68[v72];v163=5;end if (v163==(689 -(586 + 103))) then v164=nil;v165=nil;v165=v80[(1 -0) + 1 ];v164=v78[v80[9 -6 ]];v163=1489 -(1309 + 179) ;end if (v163==(5 -2)) then v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + 1 ]][v80[7 -4 ]]=v80[4 + 0 ];v72=v72 + (1 -0) ;v163=7 -3 ;end if ((4702>2133) and (v163==(614 -(295 + 314)))) then v165=v80[4 -2 ];v78[v165](v13(v78,v165 + (1963 -(1300 + 329 + 333)) ,v80[9 -6 ]));break;end end elseif ((v81==45) or (3335<=3201)) then local v579=v80[1757 -(1178 + 577) ];local v580=v78[v579];for v705=v579 + 1 ,v80[2 + 1 ] do v7(v580,v78[v705]);end else v78[v80[5 -3 ]]();end elseif (v81<=(1453 -(851 + 554))) then if ((v81>(42 + 5)) or (3347<1460)) then for v706=v80[5 -3 ],v80[6 -3 ] do v78[v706]=nil;end else local v581=(213 + 89) -(115 + 187) ;local v582;while true do if ((0 + (0 -0))==v581) then v582=v80[(1866 -(1710 + 154)) + (318 -(200 + 118)) ];v78[v582]=v78[v582]();break;end end end elseif (v81==(192 -143)) then local v583=v80[1163 -(160 + 397 + 604) ];v78[v583](v78[v583 + 1 + 0 ]);else v78[v80[2 + 0 ]][v80[5 -(2 -0) ]]=v78[v80[362 -(237 + 121) ]];end elseif ((v81<=((1410 -459) -(525 + 372))) or (4691<4371)) then if (v81<=(98 -46)) then if ((612==612) and (v81>(167 -116))) then local v586=142 -(96 + 46) ;local v587;local v588;while true do if ((v586==(784 -(643 + 134))) or (4840<=4170)) then v78[v588](v13(v78,v588 + 1 ,v80[2 + 1 ]));break;end if (v586==(0 -0)) then v587=nil;v588=nil;v588=v80[7 -5 ];v586=1;end if (v586==(3 + 0)) then v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[3 -1 ]][v80[722 -(316 + 403) ]]=v80[3 + 1 ];v586=10 -6 ;end if (v586==(1 + 0)) then v587=v78[v80[7 -4 ]];v78[v588 + 1 + 0 ]=v587;v78[v588]=v587[v80[2 + 2 ]];v586=6 -(4 + 0) ;end if ((1346==1346) and (v586==4)) then v72=v72 + (4 -3) ;v80=v68[v72];v78[v80[3 -1 ]][v80[1 + 2 ]]=v80[7 -3 ];v586=1 + 0 + 4 ;end if (v586==2) then v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[19 -(12 + 5) ]]={};v586=11 -8 ;end if (v586==(10 -5)) then v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[4 -(2 + 0) ]][v80[3]]=v80[1 + 3 ];v586=1979 -(1656 + 317) ;end if (v586==(6 + 0)) then v72=v72 + 1 + 0 ;v80=v68[v72];v588=v80[4 -2 ];v586=34 -27 ;end end else local v589=v80[357 -(5 + 56 + 293) ];local v590=v78[v589];for v708=v589 + 1 ,v80[4] do v590=v590   .. v78[v708] ;end v78[v80[9 -7 ]]=v590;end elseif ((v81>(1324 -(266 + 1005))) or (3020<=2751)) then v78[v80[2 + 0 ]]=v80[10 -7 ]~=((0 -0) -0) ;else local v593;local v594;v594=v80[2];v593=v78[v80[1699 -(561 + 1135) ]];v78[v594 + 1 ]=v593;v78[v594]=v593[v80[(1255 -(363 + 887)) -(1 -0) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]={};v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[2]][v80[1069 -(507 + 559) ]]=v80[4];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2]][v80[9 -(28 -22) ]]=v80[392 -(212 + 176) ];v72=v72 + (906 -(250 + 655)) ;v80=v68[v72];v78[v80[5 -3 ]]={};v72=v72 + ((1 + 0) -0) ;v80=v68[v72];v78[v80[2 -0 ]]={};v72=v72 + (1957 -(1869 + 87)) ;v80=v68[v72];v78[v80[6 -4 ]][v80[1904 -(484 + 1417) ]]=v80[4];end elseif (v81<=(119 -63)) then if ((3824>3667) and (v81==(91 -36))) then local v609=v80[775 -((112 -64) + 496 + 229) ];v78[v609](v13(v78,v609 + 1 ,v80[3]));elseif ((v78[v80[2 -0 ]]==v80[10 -6 ]) or (3048>3830)) then v72=v72 + (1665 -(674 + 990)) + 0 + 0 ;else v72=v80[(3 + 4) -4 ];end elseif ((v81>(16 + 41)) or (2117<1050)) then if (v78[v80[1 + 1 ]]==v78[v80[857 -(152 + 701) ]]) then v72=v72 + (1312 -(430 + 881)) ;else v72=v80[2 + 1 ];end else local v610=0;local v611;local v612;while true do if ((v610==(898 -(557 + 338))) or (1099==1810)) then v78[v80[1 + 1 ]]=v78[v80[8 -5 ]][v80[(19 -6) -9 ]];v72=v72 + (2 -1) ;v80=v68[v72];v610=8 -(1059 -(507 + 548)) ;end if (v610==0) then v611=nil;v612=nil;v78[v80[2]][v80[804 -(499 + 302) ]]=v78[v80[(1707 -(289 + 548)) -(39 + 827) ]];v610=1;end if ((v610==(16 -(1828 -(821 + 997)))) or (4892==3708)) then v78[v80[4 -2 ]]={};v72=v72 + (3 -2) ;v80=v68[v72];v610=10 -3 ;end if (v610==(1 + 0)) then v72=v72 + (256 -(195 + 60)) ;v80=v68[v72];v612=v80[5 -3 ];v610=1 + 1 ;end if ((2393>617) and (v610==((2 + 3) -1))) then v612=v80[(1607 -(251 + 1250)) -(103 + (2 -1)) ];v611=v78[v80[557 -(327 + 148 + 79) ]];v78[v612 + (2 -1) ]=v611;v610=5;end if ((v610==((1054 -(809 + 223)) -15)) or (1352>2414)) then v78[v80[2 -0 ]][v80[1 + 2 ]]=v80[4 + 0 ];v72=v72 + (1504 -(1395 + 108)) ;v80=v68[v72];v610=23 -15 ;end if ((v610==5) or (1584==2283)) then v78[v612]=v611[v80[1208 -(7 + 1197) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v610=17 -11 ;end if ((1 + 1)==v610) then v78[v612](v13(v78,v612 + (320 -(27 + 292)) ,v80[8 -5 ]));v72=v72 + (1 -0) ;v80=v68[v72];v610=12 -9 ;end if ((2073<2845) and ((15 -(23 -16))==v610)) then v78[v80[3 -1 ]][v80[3]]=v80[143 -(43 + 96) ];break;end end end v72=v72 + (4 -3) ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
